-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\hydrophone\Subsystem.vhd
-- Created: 2017-07-03 12:54:48
-- 
-- Generated by MATLAB 9.2 and HDL Coder 3.10
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 2e-06
-- Target subsystem base rate: 2e-06
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        2e-06
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- validOut1                     ce_out        2e-06
-- dataOut1                      ce_out        2e-06
-- peak1                         ce_out        2e-06
-- validOut2                     ce_out        2e-06
-- dataOut2                      ce_out        2e-06
-- peak2                         ce_out        2e-06
-- validOut3                     ce_out        2e-06
-- dataOut3                      ce_out        2e-06
-- peak3                         ce_out        2e-06
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Subsystem
-- Source Path: hydrophone/Subsystem
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Subsystem IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        In1                               :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En16
        In2                               :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En16
        In3                               :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En16
        ce_out                            :   OUT   std_logic;
        validOut1                         :   OUT   std_logic;
        dataOut1                          :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En14
        peak1                             :   OUT   std_logic;
        validOut2                         :   OUT   std_logic;
        dataOut2                          :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En14
        peak2                             :   OUT   std_logic;
        validOut3                         :   OUT   std_logic;
        dataOut3                          :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En14
        peak3                             :   OUT   std_logic
        );
END Subsystem;


ARCHITECTURE rtl OF Subsystem IS

  -- Component Declarations
  COMPONENT Discrete_FIR_Filter_HDL_Optimized
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn                          :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En16
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT FFT_HDL_Optimized
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn                          :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(25 DOWNTO 0);  -- sfix26_En14
          dataOut_im                      :   OUT   std_logic_vector(25 DOWNTO 0);  -- sfix26_En14
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT Complex_to_Magnitude_Angle_HDL_Optimized
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In_re                           :   IN    std_logic_vector(25 DOWNTO 0);  -- sfix26_En14
          In_im                           :   IN    std_logic_vector(25 DOWNTO 0);  -- sfix26_En14
          validIn                         :   IN    std_logic;
          magnitude                       :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En14
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT Enabled_Subsystem
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En14
          Enable                          :   IN    std_logic;
          Out1                            :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En14
          Out2                            :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT Discrete_FIR_Filter_HDL_Optimized1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn                          :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En16
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT FFT_HDL_Optimized1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn                          :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(25 DOWNTO 0);  -- sfix26_En14
          dataOut_im                      :   OUT   std_logic_vector(25 DOWNTO 0);  -- sfix26_En14
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT Complex_to_Magnitude_Angle_HDL_Optimized1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In_re                           :   IN    std_logic_vector(25 DOWNTO 0);  -- sfix26_En14
          In_im                           :   IN    std_logic_vector(25 DOWNTO 0);  -- sfix26_En14
          validIn                         :   IN    std_logic;
          magnitude                       :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En14
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT Discrete_FIR_Filter_HDL_Optimized2
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn                          :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En16
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT FFT_HDL_Optimized2
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn                          :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(25 DOWNTO 0);  -- sfix26_En14
          dataOut_im                      :   OUT   std_logic_vector(25 DOWNTO 0);  -- sfix26_En14
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT Complex_to_Magnitude_Angle_HDL_Optimized2
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In_re                           :   IN    std_logic_vector(25 DOWNTO 0);  -- sfix26_En14
          In_im                           :   IN    std_logic_vector(25 DOWNTO 0);  -- sfix26_En14
          validIn                         :   IN    std_logic;
          magnitude                       :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En14
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Discrete_FIR_Filter_HDL_Optimized
    USE ENTITY work.Discrete_FIR_Filter_HDL_Optimized(rtl);

  FOR ALL : FFT_HDL_Optimized
    USE ENTITY work.FFT_HDL_Optimized(rtl);

  FOR ALL : Complex_to_Magnitude_Angle_HDL_Optimized
    USE ENTITY work.Complex_to_Magnitude_Angle_HDL_Optimized(rtl);

  FOR ALL : Enabled_Subsystem
    USE ENTITY work.Enabled_Subsystem(rtl);

  FOR ALL : Discrete_FIR_Filter_HDL_Optimized1
    USE ENTITY work.Discrete_FIR_Filter_HDL_Optimized1(rtl);

  FOR ALL : FFT_HDL_Optimized1
    USE ENTITY work.FFT_HDL_Optimized1(rtl);

  FOR ALL : Complex_to_Magnitude_Angle_HDL_Optimized1
    USE ENTITY work.Complex_to_Magnitude_Angle_HDL_Optimized1(rtl);

  FOR ALL : Discrete_FIR_Filter_HDL_Optimized2
    USE ENTITY work.Discrete_FIR_Filter_HDL_Optimized2(rtl);

  FOR ALL : FFT_HDL_Optimized2
    USE ENTITY work.FFT_HDL_Optimized2(rtl);

  FOR ALL : Complex_to_Magnitude_Angle_HDL_Optimized2
    USE ENTITY work.Complex_to_Magnitude_Angle_HDL_Optimized2(rtl);

  -- Signals
  SIGNAL Discrete_FIR_Filter_HDL_Optimized_out1 : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Discrete_FIR_Filter_HDL_Optimized_out2 : std_logic;
  SIGNAL FFT_HDL_Optimized_out1_re        : std_logic_vector(25 DOWNTO 0);  -- ufix26
  SIGNAL FFT_HDL_Optimized_out1_im        : std_logic_vector(25 DOWNTO 0);  -- ufix26
  SIGNAL FFT_HDL_Optimized_out2           : std_logic;
  SIGNAL Complex_to_Magnitude_Angle_HDL_Optimized_out1 : std_logic_vector(26 DOWNTO 0);  -- ufix27
  SIGNAL Complex_to_Magnitude_Angle_HDL_Optimized_out2 : std_logic;
  SIGNAL Enabled_Subsystem_out1           : std_logic_vector(26 DOWNTO 0);  -- ufix27
  SIGNAL Enabled_Subsystem_out2           : std_logic;
  SIGNAL Discrete_FIR_Filter_HDL_Optimized1_out1 : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Discrete_FIR_Filter_HDL_Optimized1_out2 : std_logic;
  SIGNAL FFT_HDL_Optimized1_out1_re       : std_logic_vector(25 DOWNTO 0);  -- ufix26
  SIGNAL FFT_HDL_Optimized1_out1_im       : std_logic_vector(25 DOWNTO 0);  -- ufix26
  SIGNAL FFT_HDL_Optimized1_out2          : std_logic;
  SIGNAL Complex_to_Magnitude_Angle_HDL_Optimized1_out1 : std_logic_vector(26 DOWNTO 0);  -- ufix27
  SIGNAL Complex_to_Magnitude_Angle_HDL_Optimized1_out2 : std_logic;
  SIGNAL Enabled_Subsystem1_out1          : std_logic_vector(26 DOWNTO 0);  -- ufix27
  SIGNAL Enabled_Subsystem1_out2          : std_logic;
  SIGNAL Discrete_FIR_Filter_HDL_Optimized2_out1 : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Discrete_FIR_Filter_HDL_Optimized2_out2 : std_logic;
  SIGNAL FFT_HDL_Optimized2_out1_re       : std_logic_vector(25 DOWNTO 0);  -- ufix26
  SIGNAL FFT_HDL_Optimized2_out1_im       : std_logic_vector(25 DOWNTO 0);  -- ufix26
  SIGNAL FFT_HDL_Optimized2_out2          : std_logic;
  SIGNAL Complex_to_Magnitude_Angle_HDL_Optimized2_out1 : std_logic_vector(26 DOWNTO 0);  -- ufix27
  SIGNAL Complex_to_Magnitude_Angle_HDL_Optimized2_out2 : std_logic;
  SIGNAL Enabled_Subsystem2_out1          : std_logic_vector(26 DOWNTO 0);  -- ufix27
  SIGNAL Enabled_Subsystem2_out2          : std_logic;

BEGIN
  u_Discrete_FIR_Filter_HDL_Optimized : Discrete_FIR_Filter_HDL_Optimized
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              dataIn => In1,  -- sfix16_En16
              dataOut => Discrete_FIR_Filter_HDL_Optimized_out1,  -- sfix16_En14
              validOut => Discrete_FIR_Filter_HDL_Optimized_out2
              );

  u_FFT_HDL_Optimized : FFT_HDL_Optimized
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              dataIn => Discrete_FIR_Filter_HDL_Optimized_out1,  -- sfix16_En14
              validIn => Discrete_FIR_Filter_HDL_Optimized_out2,
              dataOut_re => FFT_HDL_Optimized_out1_re,  -- sfix26_En14
              dataOut_im => FFT_HDL_Optimized_out1_im,  -- sfix26_En14
              validOut => FFT_HDL_Optimized_out2
              );

  u_Complex_to_Magnitude_Angle_HDL_Optimized : Complex_to_Magnitude_Angle_HDL_Optimized
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              In_re => FFT_HDL_Optimized_out1_re,  -- sfix26_En14
              In_im => FFT_HDL_Optimized_out1_im,  -- sfix26_En14
              validIn => FFT_HDL_Optimized_out2,
              magnitude => Complex_to_Magnitude_Angle_HDL_Optimized_out1,  -- sfix27_En14
              validOut => Complex_to_Magnitude_Angle_HDL_Optimized_out2
              );

  u_Enabled_Subsystem : Enabled_Subsystem
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              In1 => Complex_to_Magnitude_Angle_HDL_Optimized_out1,  -- sfix27_En14
              Enable => Complex_to_Magnitude_Angle_HDL_Optimized_out2,
              Out1 => Enabled_Subsystem_out1,  -- sfix27_En14
              Out2 => Enabled_Subsystem_out2
              );

  u_Discrete_FIR_Filter_HDL_Optimized1 : Discrete_FIR_Filter_HDL_Optimized1
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              dataIn => In2,  -- sfix16_En16
              dataOut => Discrete_FIR_Filter_HDL_Optimized1_out1,  -- sfix16_En14
              validOut => Discrete_FIR_Filter_HDL_Optimized1_out2
              );

  u_FFT_HDL_Optimized1 : FFT_HDL_Optimized1
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              dataIn => Discrete_FIR_Filter_HDL_Optimized1_out1,  -- sfix16_En14
              validIn => Discrete_FIR_Filter_HDL_Optimized1_out2,
              dataOut_re => FFT_HDL_Optimized1_out1_re,  -- sfix26_En14
              dataOut_im => FFT_HDL_Optimized1_out1_im,  -- sfix26_En14
              validOut => FFT_HDL_Optimized1_out2
              );

  u_Complex_to_Magnitude_Angle_HDL_Optimized1 : Complex_to_Magnitude_Angle_HDL_Optimized1
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              In_re => FFT_HDL_Optimized1_out1_re,  -- sfix26_En14
              In_im => FFT_HDL_Optimized1_out1_im,  -- sfix26_En14
              validIn => FFT_HDL_Optimized1_out2,
              magnitude => Complex_to_Magnitude_Angle_HDL_Optimized1_out1,  -- sfix27_En14
              validOut => Complex_to_Magnitude_Angle_HDL_Optimized1_out2
              );

  u_Enabled_Subsystem1 : Enabled_Subsystem
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              In1 => Complex_to_Magnitude_Angle_HDL_Optimized1_out1,  -- sfix27_En14
              Enable => Complex_to_Magnitude_Angle_HDL_Optimized1_out2,
              Out1 => Enabled_Subsystem1_out1,  -- sfix27_En14
              Out2 => Enabled_Subsystem1_out2
              );

  u_Discrete_FIR_Filter_HDL_Optimized2 : Discrete_FIR_Filter_HDL_Optimized2
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              dataIn => In3,  -- sfix16_En16
              dataOut => Discrete_FIR_Filter_HDL_Optimized2_out1,  -- sfix16_En14
              validOut => Discrete_FIR_Filter_HDL_Optimized2_out2
              );

  u_FFT_HDL_Optimized2 : FFT_HDL_Optimized2
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              dataIn => Discrete_FIR_Filter_HDL_Optimized2_out1,  -- sfix16_En14
              validIn => Discrete_FIR_Filter_HDL_Optimized2_out2,
              dataOut_re => FFT_HDL_Optimized2_out1_re,  -- sfix26_En14
              dataOut_im => FFT_HDL_Optimized2_out1_im,  -- sfix26_En14
              validOut => FFT_HDL_Optimized2_out2
              );

  u_Complex_to_Magnitude_Angle_HDL_Optimized2 : Complex_to_Magnitude_Angle_HDL_Optimized2
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              In_re => FFT_HDL_Optimized2_out1_re,  -- sfix26_En14
              In_im => FFT_HDL_Optimized2_out1_im,  -- sfix26_En14
              validIn => FFT_HDL_Optimized2_out2,
              magnitude => Complex_to_Magnitude_Angle_HDL_Optimized2_out1,  -- sfix27_En14
              validOut => Complex_to_Magnitude_Angle_HDL_Optimized2_out2
              );

  u_Enabled_Subsystem2 : Enabled_Subsystem
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              In1 => Complex_to_Magnitude_Angle_HDL_Optimized2_out1,  -- sfix27_En14
              Enable => Complex_to_Magnitude_Angle_HDL_Optimized2_out2,
              Out1 => Enabled_Subsystem2_out1,  -- sfix27_En14
              Out2 => Enabled_Subsystem2_out2
              );

  ce_out <= clk_enable;

  validOut1 <= Complex_to_Magnitude_Angle_HDL_Optimized_out2;

  dataOut1 <= Enabled_Subsystem_out1;

  peak1 <= Enabled_Subsystem_out2;

  validOut2 <= Complex_to_Magnitude_Angle_HDL_Optimized1_out2;

  dataOut2 <= Enabled_Subsystem1_out1;

  peak2 <= Enabled_Subsystem1_out2;

  validOut3 <= Complex_to_Magnitude_Angle_HDL_Optimized2_out2;

  dataOut3 <= Enabled_Subsystem2_out1;

  peak3 <= Enabled_Subsystem2_out2;

END rtl;

